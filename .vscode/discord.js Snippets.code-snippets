{
	// Place your PlankBot-Evolved workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Basic Command": {
		"scope": "javascript, typescript",
		"prefix": "!!cmd",
		"body": [
			"${1:const { SlashCommandBuilder \\} = require('@discordjs/builders');}",
			"",
			"module.exports = {",
			"    data: new SlashCommandBuilder()",
			"        .setName(\"${2:name}\")",
			"        .setDescription(\"${3:description}\"),",
			"    cooldown: { IsOn: ${4|false,true|}, Time: null }, // Time given in milliseconds",
			"    async execute(bot, interaction) {",
			"        //${5:command};",
			"    }",
			"};"
		]
	},
	"Reply with an embed": {
		"scope": "javascript, typescript",
		"prefix": "!!rplEmbed",
		"body": [
			"${1|interaction,message|}.reply({ embeds: [ ${2:embed} ] });"
		]
	},
	"Reply with a file": {
		"scope": "javascript, typescript",
		"prefix": "!!rplAttachment",
		"body": [
			"${1|interaction,message|}.reply({ files: [ ${2:attachment} ] });"
		]
	}
}